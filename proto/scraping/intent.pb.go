// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scraping/intent.proto

package scraping

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	data "satelit-project/satelit-scraper/proto/data"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Asks to begin scraping process from specific source
type ScrapeIntent struct {
	// Intent ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Indicator from where to scrape data
	Source               data.Source `protobuf:"varint,2,opt,name=source,proto3,enum=data.Source" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ScrapeIntent) Reset()         { *m = ScrapeIntent{} }
func (m *ScrapeIntent) String() string { return proto.CompactTextString(m) }
func (*ScrapeIntent) ProtoMessage()    {}
func (*ScrapeIntent) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1599d9bfe3cd80, []int{0}
}

func (m *ScrapeIntent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeIntent.Unmarshal(m, b)
}
func (m *ScrapeIntent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeIntent.Marshal(b, m, deterministic)
}
func (m *ScrapeIntent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeIntent.Merge(m, src)
}
func (m *ScrapeIntent) XXX_Size() int {
	return xxx_messageInfo_ScrapeIntent.Size(m)
}
func (m *ScrapeIntent) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeIntent.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeIntent proto.InternalMessageInfo

func (m *ScrapeIntent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ScrapeIntent) GetSource() data.Source {
	if m != nil {
		return m.Source
	}
	return data.Source_UNKNOWN
}

type ScrapeIntentResult struct {
	// ID of an intent that was used to initiate data scraping
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Wherever there's more data to scrape
	MayContinue          bool     `protobuf:"varint,2,opt,name=may_continue,json=mayContinue,proto3" json:"may_continue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScrapeIntentResult) Reset()         { *m = ScrapeIntentResult{} }
func (m *ScrapeIntentResult) String() string { return proto.CompactTextString(m) }
func (*ScrapeIntentResult) ProtoMessage()    {}
func (*ScrapeIntentResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1599d9bfe3cd80, []int{1}
}

func (m *ScrapeIntentResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScrapeIntentResult.Unmarshal(m, b)
}
func (m *ScrapeIntentResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScrapeIntentResult.Marshal(b, m, deterministic)
}
func (m *ScrapeIntentResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScrapeIntentResult.Merge(m, src)
}
func (m *ScrapeIntentResult) XXX_Size() int {
	return xxx_messageInfo_ScrapeIntentResult.Size(m)
}
func (m *ScrapeIntentResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ScrapeIntentResult.DiscardUnknown(m)
}

var xxx_messageInfo_ScrapeIntentResult proto.InternalMessageInfo

func (m *ScrapeIntentResult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ScrapeIntentResult) GetMayContinue() bool {
	if m != nil {
		return m.MayContinue
	}
	return false
}

func init() {
	proto.RegisterType((*ScrapeIntent)(nil), "scraping.ScrapeIntent")
	proto.RegisterType((*ScrapeIntentResult)(nil), "scraping.ScrapeIntentResult")
}

func init() { proto.RegisterFile("scraping/intent.proto", fileDescriptor_ac1599d9bfe3cd80) }

var fileDescriptor_ac1599d9bfe3cd80 = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x4e, 0x2e, 0x4a,
	0x2c, 0xc8, 0xcc, 0x4b, 0xd7, 0xcf, 0xcc, 0x2b, 0x49, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0xe2, 0x80, 0x09, 0x4b, 0x09, 0xa6, 0x24, 0x96, 0x24, 0xea, 0x17, 0xe7, 0x97, 0x16,
	0x25, 0xa7, 0x42, 0x24, 0x95, 0x5c, 0xb8, 0x78, 0x82, 0x41, 0xd2, 0xa9, 0x9e, 0x60, 0x2d, 0x42,
	0x7c, 0x5c, 0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x4c, 0x99, 0x29, 0x42,
	0x2a, 0x5c, 0x6c, 0x10, 0xf5, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x7c, 0x46, 0x3c, 0x7a, 0x20, 0x33,
	0xf4, 0x82, 0xc1, 0x62, 0x41, 0x50, 0x39, 0x25, 0x77, 0x2e, 0x21, 0x64, 0x53, 0x82, 0x52, 0x8b,
	0x4b, 0x73, 0x30, 0xcd, 0x52, 0xe4, 0xe2, 0xc9, 0x4d, 0xac, 0x8c, 0x4f, 0xce, 0xcf, 0x2b, 0xc9,
	0xcc, 0x2b, 0x85, 0x98, 0xc8, 0x11, 0xc4, 0x9d, 0x9b, 0x58, 0xe9, 0x0c, 0x15, 0x4a, 0x62, 0x03,
	0xbb, 0xca, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xb8, 0x37, 0xa2, 0xcb, 0x00, 0x00, 0x00,
}
